import * as turf from "@turf/turf";
import { Map, View } from "ol";
import { Vector as VectorLayer, Tile as TileLayer } from "ol/layer.js";
import { OSM, Vector as VectorSource } from "ol/source";
import { GeoJSON } from "ol/format";
import { fromLonLat } from "ol/proj";
import { Fill, Stroke, Style } from "ol/style";
import { polygonsNotInPolygon } from "../src/polygonsNotInPolygon";
import "normalize.css";

const waterBoundary = turf.polygon(
  [
    [
      [-79.48917388916011, 43.606312841425925],
      [-79.51835632324217, 43.581136968065685],
      [-79.51217651367188, 43.531624806844356],
      [-79.33982849121094, 43.53212261888178],
      [-79.16954040527344, 43.54257572246922],
      [-79.05143737792969, 43.560491112629286],
      [-79.00955200195312, 43.59133291164543],
      [-78.99959564208984, 43.6478144790543],
      [-78.99444580078125, 43.726452188547015],
      [-79.013671875, 43.7715896488274],
      [-79.04560089111325, 43.81477314988981],
      [-79.06242370605463, 43.80436735534028],
      [-79.07375335693355, 43.80907496314707],
      [-79.0823364257812, 43.81303897669493],
      [-79.0950393676757, 43.81217187121286],
      [-79.11975860595699, 43.78987054897378],
      [-79.15237426757807, 43.75962657759532],
      [-79.17709350585933, 43.75367514341628],
      [-79.18988227844231, 43.74635902796795],
      [-79.19983863830561, 43.73835987852775],
      [-79.21013832092277, 43.7316000742187],
      [-79.21932220458976, 43.72192416436794],
      [-79.22790527343741, 43.703560449339236],
      [-79.25399780273432, 43.6976034414506],
      [-79.27837371826168, 43.670541249166746],
      [-79.29553985595697, 43.666195264446124],
      [-79.30189132690421, 43.66582273682821],
      [-79.30480957031241, 43.661600595584154],
      [-79.30429458618158, 43.65762654433197],
      [-79.30412292480462, 43.656136207298196],
      [-79.3068695068359, 43.65750235099195],
      [-79.30807113647454, 43.65414903371431],
      [-79.31133270263665, 43.655018430248646],
      [-79.31270599365226, 43.65775073741506],
      [-79.31562423706048, 43.65775073741506],
      [-79.3195724487304, 43.6483113310163],
      [-79.32197570800778, 43.6174987377227],
      [-79.3272972106933, 43.61774728956549],
      [-79.32815551757804, 43.61948712369751],
      [-79.33279037475577, 43.619984209917064],
      [-79.33948516845697, 43.61812011540333],
      [-79.34171676635738, 43.61302462886409],
      [-79.34412002563474, 43.61240319852851],
      [-79.3453216552734, 43.62259384514506],
      [-79.33982849121088, 43.63029782159123],
      [-79.32334899902338, 43.63837351090243],
      [-79.32214736938471, 43.645330157595836],
      [-79.32403564453118, 43.645330157595836],
      [-79.32884216308585, 43.636882696096265],
      [-79.33107376098626, 43.639118904435],
      [-79.32558059692376, 43.64619968179372],
      [-79.32849884033195, 43.64806290554903],
      [-79.33433532714838, 43.64036120644012],
      [-79.33948516845697, 43.63936736689092],
      [-79.34429168701163, 43.63700693207623],
      [-79.34703826904291, 43.6335282275444],
      [-79.35047149658196, 43.634646404534124],
      [-79.36008453369132, 43.645702812364746],
      [-79.37862396240227, 43.63787657674357],
      [-79.38772201538077, 43.63750387342729],
      [-79.39252853393549, 43.63551608336418],
      [-79.39424514770499, 43.6336524704595],
      [-79.39184188842769, 43.631664552993094],
      [-79.38772201538077, 43.633031253315],
      [-79.38686370849607, 43.62806128498396],
      [-79.38034057617183, 43.624333539033834],
      [-79.37330245971675, 43.624333539033834],
      [-79.36454772949214, 43.62594892399502],
      [-79.35699462890621, 43.6336524704595],
      [-79.35304641723629, 43.634646404534124],
      [-79.34875488281246, 43.6309190669904],
      [-79.34926986694333, 43.629179563690336],
      [-79.35373306274408, 43.62967656977039],
      [-79.35939788818351, 43.623836488774145],
      [-79.37965393066403, 43.61265177143327],
      [-79.39029693603507, 43.611533185270964],
      [-79.3949317932128, 43.62060556191219],
      [-79.40437316894526, 43.62669447164389],
      [-79.4110679626464, 43.626818728686345],
      [-79.41947937011714, 43.62619744090542],
      [-79.43887710571285, 43.633403984372286],
      [-79.4510650634765, 43.636882696096265],
      [-79.45827484130855, 43.63663422336586],
      [-79.46651458740229, 43.63489488548418],
      [-79.47149276733391, 43.63104331529969],
      [-79.474925994873, 43.628931059109114],
      [-79.47595596313471, 43.623836488774145],
      [-79.47406768798824, 43.62371222556703],
      [-79.47286605834952, 43.62532762722407],
      [-79.4694328308105, 43.62594892399502],
      [-79.4685745239257, 43.622718110663754],
      [-79.47406768798824, 43.62159971174798],
      [-79.47904586791985, 43.61265177143327],
      [-79.48574066162107, 43.61227891169082],
      [-79.48917388916011, 43.606312841425925]
    ]
  ],
  { name: "waterBoundary" }
);

const bbox = [-79.5, 43.59, -79.13, 43.78];
const cellSide = 0.2;
const options = { units: "kilometers" };
const grid = turf.hexGrid(bbox, cellSide, options);
const gridNotInWater = polygonsNotInPolygon(grid, waterBoundary);

/*

Open Layers

*/

const geojsonFormatter = new GeoJSON();

const map = new Map({
  layers: [
    new TileLayer({
      source: new OSM()
    }),
    new VectorLayer({
      source: new VectorSource({
        features: geojsonFormatter.readFeatures(gridNotInWater, {
          dataProjection: "EPSG:4326",
          featureProjection: "EPSG:3857"
        })
      }),
      style: new Style({
        stroke: new Stroke({
          color: [0, 0, 0],
          width: 1
        }),
        fill: new Fill({
          color: [255, 255, 255, 0.4]
        })
      })
    }),
    new VectorLayer({
      source: new VectorSource({
        features: geojsonFormatter.readFeatures(waterBoundary, {
          dataProjection: "EPSG:4326",
          featureProjection: "EPSG:3857"
        })
      }),
      style: new Style({
        stroke: new Stroke({
          color: [0, 0, 0],
          width: 2
        }),
        fill: new Fill({
          color: [10, 20, 30, 0.2]
        })
      })
    })
  ],
  target: "map",
  view: new View({
    center: fromLonLat([-79.3871, 43.6426]),
    zoom: 12
  })
});
